name: Deploy frontend-mobile from Docker Hub to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies & Build
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
          echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> .env
          echo "BASE_API_URL=${{ secrets.BASE_API_URL }}" >> .env
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend-mobile:latest

      - name: Save PEM file
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > frontend-key.pem
          chmod 400 frontend-key.pem

      - name: Create remote folder on EC2
        run: |
          ssh -i frontend-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "mkdir -p /home/${{ secrets.EC2_USER }}/frontend"

      - name: Copy docker-compose.yml and .env to EC2
        run: |
          sed "s|\${DOCKER_USERNAME}|${{ secrets.DOCKER_USERNAME }}|g" docker-compose.yml > docker-compose.remote.yml

          scp -i frontend-key.pem -o StrictHostKeyChecking=no \
          docker-compose.remote.yml .env \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/frontend/

      - name: Remote Docker Compose Pull & Up
        run: |
          ssh -i frontend-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/frontend
            mv docker-compose.remote.yml docker-compose.yml

            echo "[✔] .env 파일 내용 확인:"
            cat .env || echo ".env 파일이 없습니다!"

            echo "[✔] 기존 컨테이너 종료 및 제거"
            docker compose down || true
            docker rm -f frontend-mobile || true

            echo "[✔] 이미지 pull 및 컨테이너 재시작"
            docker compose pull
            docker compose up -d

            echo "[✔] 사용하지 않는 이미지 정리"
            docker image prune -a -f --filter "until=72h"
          EOF